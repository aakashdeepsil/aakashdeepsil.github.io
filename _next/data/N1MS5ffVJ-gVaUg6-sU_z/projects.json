{"pageProps":{"projects":[{"data":{"title":"Capstone Student Matching System","url":"https://github.com/aakashdeepsil/capstone-matching","order":1,"caption":"Match undergraduate students with industry capstone projects.","preview":"/img/freelance.webp","tags":["Ruby on Rails","Heroku","PostgreSQL","Natural Language Processing(NLP)"],"slug":"freelance"},"content":"","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Capstone Student Matching System","url":"https://github.com/aakashdeepsil/capstone-matching","order":1,"caption":"Match undergraduate students with industry capstone projects.","preview":"/img/freelance.webp","tags":["Ruby on Rails","Heroku","PostgreSQL","Natural Language Processing(NLP)"],"slug":"freelance"}}},{"data":{"title":"Smart Home Delivery Storage System","url":"https://github.com/aakashdeepsil/Smart-Home-Delivery-System","order":2,"caption":"Ensures security of your delivery package untill you come back home.","preview":"/img/seconds.webp","tags":["Python","AWS","Raspberry Pi 4","Internet of Things","Networking","Machine Learning","Facial Recognition"],"slug":"seconds"},"content":"","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Smart Home Delivery Storage System","url":"https://github.com/aakashdeepsil/Smart-Home-Delivery-System","order":2,"caption":"Ensures security of your delivery package untill you come back home.","preview":"/img/seconds.webp","tags":["Python","AWS","Raspberry Pi 4","Internet of Things","Networking","Machine Learning","Facial Recognition"],"slug":"seconds"}}},{"data":{"title":"No Reference Image Quality Assessment","url":"https://github.com/aakashdeepsil/image_quality_assessment_final_year_project","order":3,"caption":"Compute and classify quality of given image without reference.","preview":"/img/hiddentity.webp","tags":["Python","Machine Learning","Image Classification"],"slug":"hiddentity"},"content":"","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"No Reference Image Quality Assessment","url":"https://github.com/aakashdeepsil/image_quality_assessment_final_year_project","order":3,"caption":"Compute and classify quality of given image without reference.","preview":"/img/hiddentity.webp","tags":["Python","Machine Learning","Image Classification"],"slug":"hiddentity"}}},{"data":{"title":"Gophers Bank","url":"https://github.com/aakashdeepsil/bank-of-gophers","order":4,"caption":"Simple banking application built using Golang.","preview":"/img/yail.webp","tags":["Golang","PostgreSQL","Docker","JWT","REST API"],"slug":"yail"},"content":"","source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  return _jsx(_Fragment, {});\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"Gophers Bank","url":"https://github.com/aakashdeepsil/bank-of-gophers","order":4,"caption":"Simple banking application built using Golang.","preview":"/img/yail.webp","tags":["Golang","PostgreSQL","Docker","JWT","REST API"],"slug":"yail"}}}]},"__N_SSG":true}